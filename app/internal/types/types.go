// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5

package types

type AccountCurrency struct {
	Id                       int64   `json:"id"`                         // 唯一标识符
	Chain                    string  `json:"chain"`                      // 所属链
	Logo                     string  `json:"logo"`                       // 代币 logo 链接
	Address                  string  `json:"address"`                    // 代币地址
	QuoteMintAddress         string  `json:"quote_mtin_address"`         // 池地址
	Symbol                   string  `json:"symbol"`                     // 代币符号
	Volume                   float64 `json:"volume"`                     // 交易量
	Price                    float64 `json:"price"`                      // 代币价格
	InitialLiquidity         float64 `json:"initial_liquidity"`          // 初始流动性
	Liquidity                float64 `json:"liquidity"`                  // 当前流动性
	Telegram                 string  `json:"telegram"`                   // Telegram 链接
	TwitterUsername          string  `json:"twitter_username"`           // Twitter 用户名
	Website                  string  `json:"website"`                    // 官网链接
	Buys                     int64   `json:"buys"`                       // 买入笔数
	Sells                    int64   `json:"sells"`                      // 卖出笔数
	Swaps                    int64   `json:"swaps"`                      // 30天交换数量
	UnrealizedProfits        float64 `json:"unrealized_profits"`         // 未实现盈亏
	UnrealizedProfitsPercent float64 `json:"unrealized_profits_percent"` // 未实现盈亏百分比
	TotalProfit              float64 `json:"total_profit"`               // 总盈亏
	TotalProfitPercent       float64 `json:"total_profit_percent"`       // 总盈亏百分比
	TokenPriceUsd            float64 `json:"token_price_usd"`            // 余额（USDT）
	TokenNum                 float64 `json:"token_num"`                  // 代币数量当前地址
	PositionPercent          float64 `json:"position_percent"`           // 仓位百分比
	BoughtAvgPrice           float64 `json:"bought_avg_price"`           // 买入均价
	SoldAvgPrice             float64 `json:"sold_avg_price"`             // 卖出均价
	MainPrice                float64 `json:"main_price"`                 // 主网币价
	EnterAddress             int64   `json:"enter_address"`              // 代币进入地址的时间戳
}

type AccountInfoRequest struct {
}

type AccountInfoResponse struct {
	Nickname           string    `json:"nickname"`             // 昵称
	InitialFunding     float64   `json:"initial_funding"`      // 初始资金
	Funding            float64   `json:"funding"`              // 资金
	MoneyPerDay        []float64 `json:"money_per_day"`        // 资金每日变化数组
	UnrealizedProfits  float64   `json:"unrealized_profits"`   // 未实现盈亏
	TotalProfit        float64   `json:"total_profit"`         // 总盈亏
	Buy                int64     `json:"buy"`                  // 买入次数
	Sell               int64     `json:"sell"`                 // 卖出次数
	Role               string    `json:"role"`                 // 角色
	InviteCode         string    `json:"invite_code"`          // 邀请码
	RebateAddress      []string  `json:"rebate_address"`       // 一级邀请人列表
	RebateAddressTotal int64     `json:"rebate_address_total"` // 邀请人总数
	Balance            float64   `json:"balance"`              // 钱包余额
	HistoryRebate      float64   `json:"history_rebate"`       // 历史收益
}

type AccountSummary struct {
	Id                       int64  `json:"id"`                         // 唯一标识符
	Chain                    string `json:"chain"`                      // 所属链
	Logo                     string `json:"logo"`                       // 代币 logo 链接
	Address                  string `json:"address"`                    // 代币地址
	PoolAddress              string `json:"pool_address"`               // 池地址
	Sells                    int64  `json:"sells"`                      // 卖出笔数
	SellsNum                 int64  `json:"sells_num"`                  // 卖出数量
	SellsNumUSD              int64  `json:"sells_num_usd"`              // 卖入数量（美元）
	BuysNumUSD               int64  `json:"buys_num_usd"`               // 买入数量（美元）
	Buys                     int64  `json:"buys"`                       // 买入笔数
	BuysNum                  int64  `json:"buys_num"`                   // 买入数量
	Swaps                    int64  `json:"swaps"`                      // 30天交换数量
	Symbol                   string `json:"symbol"`                     // 代币符号
	Telegram                 string `json:"telegram"`                   // Telegram 链接
	TwitterUsername          string `json:"twitter_username"`           // Twitter 用户名
	Volume                   int64  `json:"volume"`                     // 交易量
	Website                  string `json:"website"`                    // 官网链接
	EnterAddress             int64  `json:"enter_address"`              // 代币进入地址的时间戳
	UnrealizedProfits        int64  `json:"unrealized_profits"`         // 未实现盈亏
	UnrealizedProfitsPercent int64  `json:"unrealized_profits_percent"` // 未实现盈亏百分比
	TotalProfit              int64  `json:"total_profit"`               // 总盈亏
	TotalProfitPercent       int64  `json:"total_profit_percent"`       // 总盈亏百分比
	TokenPriceUSD            int64  `json:"token_price_usd"`            // 余额（USDT）
	TokenNum                 int64  `json:"token_num"`                  // 代币数量当前地址
	PositionPercent          int64  `json:"position_percent"`           // 仓位百分比
	BoughtAvgPrice           int64  `json:"bought_avg_price"`           // 买入均价
	SoldAvgPrice             int64  `json:"sold_avg_price"`             // 卖出均价
	MainPrice                int64  `json:"main_price"`                 // 主网币价
}

type Activity struct {
	MakerAddress        string   `json:"maker_address"`          // 交易发起者地址
	BaseAmount          float64  `json:"base_amount"`            // 基础货币的交易量
	QuoteAmount         float64  `json:"quote_amount"`           // 报价货币的交易量
	Volume              float64  `json:"volume"`                 // 交易金额（以美元计）
	Timestamp           int64    `json:"timestamp"`              // 交易时间戳
	SwapType            int64    `json:"swap_type"`              // 交易类型（buy/sell）
	TxHash              string   `json:"tx_hash"`                // 交易哈希
	QuotePrice          float64  `json:"quote_price"`            // 交易价格（以美元计）
	MakerTags           []string `json:"maker_tags"`             // 发起者的标签
	MakerTwitterName    string   `json:"maker_twitter_name"`     // 发起者的 Twitter 用户名
	MakerTwitterUser    string   `json:"maker_twitter_username"` // 发起者的 Twitter 显示名
	MakerName           string   `json:"maker_name"`             // 发起者的名称
	MakerAvatar         string   `json:"maker_avatar"`           // 发起者的头像 URL
	MakerENS            string   `json:"maker_ens"`              // 发起者的 ENS 名称
	MakerTokenTags      []string `json:"maker_token_tags"`       // 发起者的代币标签
	TokenAddress        string   `json:"token_address"`          // 代币地址
	QuoteAddress        string   `json:"quote_address"`          // 报价货币地址
	TotalTrade          int      `json:"total_trade"`            // 总交易量
	ID                  string   `json:"id"`                     // 唯一 ID
	IsFollowing         int      `json:"is_following"`           // 是否已关注（0/1）
	IsOpenOrClose       int      `json:"is_open_or_close"`       // 是否开仓或平仓
	BuyCostUSD          float64  `json:"buy_cost_usd"`           // 买入成本（以美元计）
	Balance             string   `json:"balance"`                // 当前余额
	Cost                float64  `json:"cost"`                   // 总成本
	HistoryBoughtAmount float64  `json:"history_bought_amount"`  // 历史买入总量
	HistorySoldIncome   float64  `json:"history_sold_income"`    // 历史卖出收益
	HistorySoldAmount   float64  `json:"history_sold_amount"`    // 历史卖出总量
	UnrealizedProfit    float64  `json:"unrealized_profit"`      // 未实现利润
	RealizedProfit      float64  `json:"realized_profit"`        // 已实现利润
}

type AddFollowTokenRequest struct {
	Token string `json:"token"`    // 关注代币
	Chain string `json:"chain_id"` // 关注的链
}

type AddFollowTokenResponse struct {
	Message string `json:"message"` // 消息
}

type CancelFollowTokenRequest struct {
	Token string `json:"token"`    // 关注代币
	Chain string `json:"chain_id"` // 关注的链
}

type CancelFollowTokenResponse struct {
	Message string `json:"message"` // 消息
}

type CancelOrderRequest struct {
	OrderId string `json:"order_id"` // 订单ID 必要
}

type CreateOrderRequest struct {
	Chain           string  `json:"chain"`            //链 必要
	MarketAddress   string  `json:"market_address"`   //代币地址 必要
	OrderType       int64   `json:"order_type"`       //订单类型 必要 market 市价单 limit 限价单
	Sz              float64 `json:"sz"`               //数量 必要 控制买入买出数量
	Px              float64 `json:"px"`               //价格 必要
	Side            int64   `json:"side"`             //方向 必要 buy 买入 sell 卖出
	Slippage        int64   `json:"slippage"`         //滑点 可选
	TransactionHash string  `json:"transaction_hash"` //交易hash 可选
}

type CreateOrderResponse struct {
	OrderId string `json:"order_id"` //订单id
}

type Currency struct {
	Follow           bool    `json:"follow"`             // 是否关注
	Logo             string  `json:"logo"`               // logo
	Symbol           string  `json:"symbol"`             // 货币符号
	Chain            string  `json:"chain"`              // 链
	Address          string  `json:"address"`            // 代币地址
	QuoteMintAddress string  `json:"quote_mint_address"` // 池地址
	Liquidity        float64 `json:"liquidity"`          // 24小时池流动性
	Volume24H        float64 `json:"volume_24h"`         // 池交易量
}

type DevDetail struct {
	Address             string  `json:"address"`
	CreatorAddress      string  `json:"creator_address"`
	CreatorTokenBalance float64 `json:"creator_token_balance"`
	CreatorTokenStatus  bool    `json:"creator_token_status"`
	Top10HolderRate     float64 `json:"top_10_holder_rate"`
	Telegram            string  `json:"telegram"`
	TwitterUsername     string  `json:"twitter_username"`
	Website             string  `json:"website"`
}

type GetAccountRequest struct {
	Address string `form:"address"` //钱包地址
	Period  string `form:"period"`  //周期 7d 30d
}

type GetAccountResponse struct {
	Nickname          string    `json:"nickname"`           // 昵称
	InitialFunding    float64   `json:"initialfunding"`     // 初始资金
	Funding           float64   `json:"funding"`            // 资金
	MoneyPerDay       []float64 `json:"moneyperday"`        // 资金每日变化数组
	UnrealizedProfits float64   `json:"unrealized_profits"` // 未实现盈亏
	TotalProfit       float64   `json:"total_profit"`       // 总盈亏
	Buy               int64     `json:"buy"`                // 买入次数
	Sell              int64     `json:"sell"`               // 卖出次数
	Role              string    `json:"role"`               // 昵称
}

type GetAccountSummaryRequest struct {
	Address string `json:"address"` // 账户地址
}

type GetAccountSummaryResponse struct {
	TotalCount int64            `json:"total_count"` // 总数
	List       []AccountSummary `json:"list"`
}

type GetFollowMarketRequest struct {
	Chain     string `path:"chain"`
	Period    string `path:"period"`
	Page      int64  `form:"page"`
	Size      int64  `form:"size,default=1000"`
	OrderBy   string `form:"order_by,default=liqudity"`
	Direction string `form:"direction,default=desc"`
	Filters   string `form:"filters[],optional"`
}

type GetFollowMarketResponse struct {
	Total int64         `json:"total"`
	List  []*MarketRank `json:"list"`
}

type GetMarketActivityRequest struct {
	Chain         string `path:"chain"`
	MarketAddress string `path:"market_address"`
	Page          int64  `form:"page"`
	Size          int64  `form:"size,default=1000"`
	OrderBy       string `form:"order_by,default=created_timestamp"`
	Direction     string `form:"direction,default=desc"`
}

type GetMarketActivityResponse struct {
	Total int64       `json:"total"`
	List  []*Activity `json:"list"`
}

type GetMarketByMintAddress struct {
	Chain     string `path:"chain"`
	QuoteMint string `path:"quote_mint"`
}

type GetMarketDetailRequest struct {
	Chain         string `path:"chain"`
	MarketAddress string `path:"market_address"`
}

type GetMarketDetailResponse struct {
	Address           string      `json:"address"`              // 市场地址
	Symbol            string      `json:"symbol"`               // 代币符号
	Name              string      `json:"name"`                 // 代币名称
	Decimals          int64       `json:"decimals"`             // 代币小数位
	Logo              string      `json:"logo"`                 // 代币 Logo 链接
	BiggestPoolAddr   string      `json:"biggest_pool_address"` // 最大池地址
	OpenTimestamp     int64       `json:"open_timestamp"`       // 开放时间戳
	HolderCount       int64       `json:"holder_count"`         // 持有者数量
	CirculatingSupply float64     `json:"circulating_supply"`   // 流通供应量
	TotalSupply       float64     `json:"total_supply"`         // 总供应量
	MaxSupply         float64     `json:"max_supply"`           // 最大供应量
	Liquidity         float64     `json:"liquidity"`            // 流动性
	CreationTimestamp int64       `json:"creation_timestamp"`   // 创建时间戳
	BasePrice         float64     `json:"base_price"`           // 流动性
	Follow            bool        `json:"follow"`               // 是否关注
	Pool              PoolDetail  `json:"pool"`                 // 池详情
	Dev               DevDetail   `json:"dev"`                  // 开发者信息
	Price             PriceDetail `json:"price"`                // 价格详情
}

type GetMarketKlineRequest struct {
	Chain         string `path:"chain"`
	MarketAddress string `path:"market_address"`
	Internal      string `form:"internal,options=1s|1m|5m|15m|30m|1h|4h|6h|1d"`
	From          int64  `form:"from"`
	To            int64  `form:"to"`
}

type GetMarketRankListRequest struct {
	Chain     string `path:"chain"`
	Period    string `path:"period,options=1m|5m|30m|1h|6h|12h|1d"`
	Page      int64  `form:"page"`
	Size      int64  `form:"size,default=1000"`
	OrderBy   string `form:"order_by"`
	Direction string `form:"direction,default=desc"`
	Filters   string `form:"filters[],optional"`
}

type GetMemeMarketRequest struct {
	Chain         string `path:"chain"`
	PumpOrRaydium string `path:"pump_or_raydium,options=Pump|Raydium"`
	Page          int64  `form:"page"`
	Size          int64  `form:"size,default=1000"`
	OrderBy       string `form:"order_by"`
	Direction     string `form:"direction,default=desc"`
	Performance   string `form:"performance,optional"`
}

type GetMemeMarketResponse struct {
	Total int64         `json:"total"`
	List  []*MarketRank `json:"list"`
}

type GetSearchCurrencyRequest struct {
	Chain string `path:"chain"`
	Page  int64  `form:"page"`
	Size  int64  `form:"size,default=1000"`
	Query string `form:"q,optional"`
}

type GetSearchCurrencyResponse struct {
	Total int64       `json:"total"`
	List  []*Currency `json:"list"`
}

type GetTokenRequest struct {
	PublicKey string `json:"publickey"` // 签名地址
	Signature []byte `json:"signature"` // 签名
}

type GetTokenResponse struct {
	Token string `json:"token"` // token
}

type GetTrendingMarketRequest struct {
	Chain     string `path:"chain"`
	Period    string `path:"period,options=1m|5m|30m|1h|6h|12h|1d"`
	Page      int64  `form:"page"`
	Size      int64  `form:"size,default=1000"`
	OrderBy   string `form:"order_by"`
	Direction string `form:"direction,default=desc"`
	Filters   string `form:"filters[],optional"`
}

type GetTrendingMarketResponse struct {
	Total int64         `json:"total"`
	List  []*MarketRank `json:"list"`
}

type GetXTopMarketRequest struct {
	Chain     string `path:"chain"`
	Period    string `path:"period,options=1d|7d|30d"`
	Page      int64  `form:"page"`
	Size      int64  `form:"size,default=1000"`
	OrderBy   string `form:"order_by"`
	Direction string `form:"direction,default=desc"`
	Filters   string `form:"filters[],optional"`
}

type GetXTopMarketResponse struct {
	Total int64         `json:"total"`
	List  []*MarketRank `json:"list"`
}

type GetXTopRequest struct {
	Chain  string `path:"chain"`
	Period string `path:"period,options=1d|7d|30d"`
	Page   int64  `form:"page,default=1"`
	Size   int64  `form:"size,default=1000"`
}

type GetXTopResponse struct {
	Total int64   `json:"total"`
	List  []*XTop `json:"list"`
}

type MarketKlineListResponse struct {
	Items []*MarketKlineResponse `json:"items"`
}

type MarketKlineResponse struct {
	O         float64 `json:"open"`
	C         float64 `json:"close"`
	H         float64 `json:"high"`
	L         float64 `json:"low"`
	V         float64 `json:"volume"`
	Timestamp int64   `json:"time"`
}

type MarketRank struct {
	Id                     int64   `json:"id"`
	Chain                  string  `json:"chain"`
	Address                string  `json:"address"`             //市场地址
	QuoteMintAddress       string  `json:"quote_mint_address"`  //新增-代币地址
	QuoteTokenAddress      string  `json:"quote_token_address"` //新增-代币池中地址
	BaseTokenAddress       string  `json:"base_token_address"`  //新增-基础币池中地址
	BaseMintAddress        string  `json:"base_mint_address"`   //新增-基础币地址（sol网络下默认wsol）
	Symbol                 string  `json:"symbol"`              //quoteSymbol
	Logo                   string  `json:"logo"`
	Price                  float64 `json:"price"`      //quotePrice
	BasePrice              float64 `json:"base_price"` //主网币地址
	Swaps                  int64   `json:"swaps"`
	Volume                 float64 `json:"volume"`
	Liquidity              float64 `json:"liquidity"` //当前流动性 USD
	MarketCap              float64 `json:"market_cap"`
	HotLevel               int64   `json:"hot_level"`
	PoolCreationTimestamp  int64   `json:"pool_creation_timestamp"`
	HolderCount            int64   `json:"holder_count"`
	TwitterUsername        string  `json:"twitter_username"`
	Website                string  `json:"website"`
	Telegram               string  `json:"telegram"`
	OpenTimestamp          int64   `json:"open_timestamp"`
	PriceChangePercent1M   float64 `json:"price_change_percent1m"`
	PriceChangePercent5M   float64 `json:"price_change_percent5m"`
	PriceChangePercent30M  float64 `json:"price_change_percent30m"` //新增-30分钟涨跌幅
	PriceChangePercent1H   float64 `json:"price_change_percent1h"`
	PriceChangePercent6H   float64 `json:"price_change_percent6h"`
	PriceChangePercent24H  float64 `json:"price_change_percent24h"`
	Buys                   int64   `json:"buys"`
	Sells                  int64   `json:"sells"`
	InitialLiquidity       float64 `json:"initial_liquidity"`        //初始化流动性 USD
	IsShowAlert            bool    `json:"is_show_alert"`            //是否提示警告
	Top10HolderRate        float64 `json:"top_10_holder_rate"`       //top10的持仓用户是否大于30%的总供应量
	RenouncedMint          int64   `json:"renounced_mint"`           //禁止挖矿
	RenouncedFreezeAccount int64   `json:"renounced_freeze_account"` //禁用冻结权限
	AuditLPBurned          int64   `json:"audit_lp_burned"`          //lp是否已销毁
	Launchpad              string  `json:"launchpad"`
	CreatorTokenStatus     string  `json:"creator_token_status"`
	CreatorClose           bool    `json:"creator_close"`
}

type MarketRankListResponse struct {
	Total int64         `json:"total"`
	List  []*MarketRank `json:"list"`
}

type Plate struct {
	Id               int64   `json:"id"`
	Logo             string  `json:"logo"`
	Symbol           string  `json:"symbol"`
	Chain            string  `json:"chain"`
	Address          string  `json:"address"`
	QuoteMintAddress string  `json:"quote_mint_address"`
	MarketCap        float64 `json:"market_cap"`
	Volume           float64 `json:"volume"`
	Price            float64 `json:"price"`
	InitialLiquidity float64 `json:"initial_liquidity"`
	Liquidity        float64 `json:"liquidity"`
	Trend            bool    `json:"trend"`
	Telegram         string  `json:"telegram"`
	TwitterUsername  string  `json:"twitter_username"`
	Website          string  `json:"website"`
}

type PoolDetail struct {
	Address             string  `json:"address"`
	QuoteMintAddress    string  `json:"quote_mint_address"`
	QuoteAddress        string  `json:"quote_address"`
	QuoteSymbol         string  `json:"quote_symbol"`
	Liquidity           float64 `json:"liquidity"`
	BaseReserve         float64 `json:"base_reserve"`
	QuoteReserve        float64 `json:"quote_reserve"`
	InitialLiquidity    float64 `json:"initial_liquidity"`
	InitialBaseReserve  float64 `json:"initial_base_reserve"`
	InitialQuoteReserve float64 `json:"initial_quote_reserve"`
	CreationTimestamp   int64   `json:"creation_timestamp"`
	BaseReserveValue    float64 `json:"base_reserve_value"`
	QuoteReserveValue   float64 `json:"quote_reserve_value"`
	QuoteVaultAddress   string  `json:"quote_vault_address"`
	BaseVaultAddress    string  `json:"base_vault_address"`
	Creator             string  `json:"creator"`
	Exchange            string  `json:"exchange"`
	Token0Address       string  `json:"token0_address"`
	Token1Address       string  `json:"token1_address"`
	BaseAddress         string  `json:"base_address"`
}

type PriceDetail struct {
	Address       string  `json:"address"`
	Price         float64 `json:"price"`
	Price1m       float64 `json:"price_1m"`
	Price5m       float64 `json:"price_5m"`
	Price1h       float64 `json:"price_1h"`
	Price6h       float64 `json:"price_6h"`
	Price24h      float64 `json:"price_24h"`
	Buys1m        float64 `json:"buys_1m"`
	Buys5m        float64 `json:"buys_5m"`
	Buys1h        float64 `json:"buys_1h"`
	Buys6h        float64 `json:"buys_6h"`
	Buys24h       float64 `json:"buys_24h"`
	Sells1m       float64 `json:"sells_1m"`
	Sells5m       float64 `json:"sells_5m"`
	Sells1h       float64 `json:"sells_1h"`
	Sells6h       float64 `json:"sells_6h"`
	Sells24h      float64 `json:"sells_24h"`
	Volume1m      float64 `json:"volume_1m"`
	Volume5m      float64 `json:"volume_5m"`
	Volume1h      float64 `json:"volume_1h"`
	Volume6h      float64 `json:"volume_6h"`
	Volume24h     float64 `json:"volume_24h"`
	BuyVolume1m   float64 `json:"buy_volume_1m"`
	BuyVolume5m   float64 `json:"buy_volume_5m"`
	BuyVolume1h   float64 `json:"buy_volume_1h"`
	BuyVolume6h   float64 `json:"buy_volume_6h"`
	BuyVolume24h  float64 `json:"buy_volume_24h"`
	SellVolume1m  float64 `json:"sell_volume_1m"`
	SellVolume5m  float64 `json:"sell_volume_5m"`
	SellVolume1h  float64 `json:"sell_volume_1h"`
	SellVolume6h  float64 `json:"sell_volume_6h"`
	SellVolume24h float64 `json:"sell_volume_24h"`
	MarketCap     float64 `json:"market_cap"`
	Volume        float64 `json:"volume"`
	Swaps         int64   `json:"swaps"`
	Sells         int64   `json:"sells"`
	Buys          int64   `json:"buys"`
}

type Request struct {
	Name string `path:"name,options=you|me"`
}

type Response struct {
	Message string `json:"message"`
}

type StartRequest struct {
	Chain  string `path:"chain"`
	Height int64  `path:"height"`
}

type UpdateAccountRequest struct {
	Name string `json:"name"` // 名称
}

type UpdateAccountResponse struct {
	Message string `json:"message"` // 消息
}

type XTop struct {
	Id             int64    `json:"id"`
	Plate          string   `json:"plate"`
	PlateTrend     bool     `json:"plate_trend"`
	PlateMarketCap float64  `json:"plate_market_cap"`
	PlateSwaps     float64  `json:"plate_swaps"`
	PlateMarket    []*Plate `json:"plate_market"`
}
