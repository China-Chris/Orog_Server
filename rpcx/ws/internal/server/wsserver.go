// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: ws.proto

package server

import (
	"context"

	"github.com/simance-ai/smdx/rpcx/ws/internal/logic"
	"github.com/simance-ai/smdx/rpcx/ws/internal/svc"
	"github.com/simance-ai/smdx/rpcx/ws/ws"
)

type WsServer struct {
	svcCtx *svc.ServiceContext
	ws.UnimplementedWsServer
}

func NewWsServer(svcCtx *svc.ServiceContext) *WsServer {
	return &WsServer{
		svcCtx: svcCtx,
	}
}

// FireMarketKline
func (s *WsServer) FireMarketKline(ctx context.Context, in *ws.FireMarketKlineRequest) (*ws.FireMarketKlineResponse, error) {
	l := logic.NewFireMarketKlineLogic(ctx, s.svcCtx)
	return l.FireMarketKline(in)
}

func (s *WsServer) FireMarketTxActivity(ctx context.Context, in *ws.FireMarketTxActivityRequest) (*ws.FireMarketTxActivityResponse, error) {
	l := logic.NewFireMarketTxActivityLogic(ctx, s.svcCtx)
	return l.FireMarketTxActivity(in)
}
