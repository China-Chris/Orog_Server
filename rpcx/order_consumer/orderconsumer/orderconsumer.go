// Code generated by goctl. DO NOT EDIT.
// Source: order_consumer.proto

package orderconsumer

import (
	"context"

	"github.com/simance-ai/smdx/rpcx/order_consumer/order_consumer"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = order_consumer.Request
	Response = order_consumer.Response

	OrderConsumer interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultOrderConsumer struct {
		cli zrpc.Client
	}
)

func NewOrderConsumer(cli zrpc.Client) OrderConsumer {
	return &defaultOrderConsumer{
		cli: cli,
	}
}

func (m *defaultOrderConsumer) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := order_consumer.NewOrderConsumerClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}





