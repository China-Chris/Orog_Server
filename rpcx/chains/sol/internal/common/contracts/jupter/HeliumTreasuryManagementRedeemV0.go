// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package jupter

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// HeliumTreasuryManagementRedeemV0 is the `heliumTreasuryManagementRedeemV0` instruction.
type HeliumTreasuryManagementRedeemV0 struct {

	// [0] = [] swapProgram
	//
	// [1] = [] treasuryManagement
	//
	// [2] = [] treasuryMint
	//
	// [3] = [WRITE] supplyMint
	//
	// [4] = [WRITE] treasury
	//
	// [5] = [WRITE] circuitBreaker
	//
	// [6] = [WRITE] from
	//
	// [7] = [WRITE] to
	//
	// [8] = [] owner
	//
	// [9] = [] circuitBreakerProgram
	//
	// [10] = [] tokenProgram
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewHeliumTreasuryManagementRedeemV0InstructionBuilder creates a new `HeliumTreasuryManagementRedeemV0` instruction builder.
func NewHeliumTreasuryManagementRedeemV0InstructionBuilder() *HeliumTreasuryManagementRedeemV0 {
	nd := &HeliumTreasuryManagementRedeemV0{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 11),
	}
	return nd
}

// SetSwapProgramAccount sets the "swapProgram" account.
func (inst *HeliumTreasuryManagementRedeemV0) SetSwapProgramAccount(swapProgram ag_solanago.PublicKey) *HeliumTreasuryManagementRedeemV0 {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(swapProgram)
	return inst
}

// GetSwapProgramAccount gets the "swapProgram" account.
func (inst *HeliumTreasuryManagementRedeemV0) GetSwapProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetTreasuryManagementAccount sets the "treasuryManagement" account.
func (inst *HeliumTreasuryManagementRedeemV0) SetTreasuryManagementAccount(treasuryManagement ag_solanago.PublicKey) *HeliumTreasuryManagementRedeemV0 {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(treasuryManagement)
	return inst
}

// GetTreasuryManagementAccount gets the "treasuryManagement" account.
func (inst *HeliumTreasuryManagementRedeemV0) GetTreasuryManagementAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetTreasuryMintAccount sets the "treasuryMint" account.
func (inst *HeliumTreasuryManagementRedeemV0) SetTreasuryMintAccount(treasuryMint ag_solanago.PublicKey) *HeliumTreasuryManagementRedeemV0 {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(treasuryMint)
	return inst
}

// GetTreasuryMintAccount gets the "treasuryMint" account.
func (inst *HeliumTreasuryManagementRedeemV0) GetTreasuryMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetSupplyMintAccount sets the "supplyMint" account.
func (inst *HeliumTreasuryManagementRedeemV0) SetSupplyMintAccount(supplyMint ag_solanago.PublicKey) *HeliumTreasuryManagementRedeemV0 {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(supplyMint).WRITE()
	return inst
}

// GetSupplyMintAccount gets the "supplyMint" account.
func (inst *HeliumTreasuryManagementRedeemV0) GetSupplyMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetTreasuryAccount sets the "treasury" account.
func (inst *HeliumTreasuryManagementRedeemV0) SetTreasuryAccount(treasury ag_solanago.PublicKey) *HeliumTreasuryManagementRedeemV0 {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(treasury).WRITE()
	return inst
}

// GetTreasuryAccount gets the "treasury" account.
func (inst *HeliumTreasuryManagementRedeemV0) GetTreasuryAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetCircuitBreakerAccount sets the "circuitBreaker" account.
func (inst *HeliumTreasuryManagementRedeemV0) SetCircuitBreakerAccount(circuitBreaker ag_solanago.PublicKey) *HeliumTreasuryManagementRedeemV0 {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(circuitBreaker).WRITE()
	return inst
}

// GetCircuitBreakerAccount gets the "circuitBreaker" account.
func (inst *HeliumTreasuryManagementRedeemV0) GetCircuitBreakerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

// SetFromAccount sets the "from" account.
func (inst *HeliumTreasuryManagementRedeemV0) SetFromAccount(from ag_solanago.PublicKey) *HeliumTreasuryManagementRedeemV0 {
	inst.AccountMetaSlice[6] = ag_solanago.Meta(from).WRITE()
	return inst
}

// GetFromAccount gets the "from" account.
func (inst *HeliumTreasuryManagementRedeemV0) GetFromAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(6)
}

// SetToAccount sets the "to" account.
func (inst *HeliumTreasuryManagementRedeemV0) SetToAccount(to ag_solanago.PublicKey) *HeliumTreasuryManagementRedeemV0 {
	inst.AccountMetaSlice[7] = ag_solanago.Meta(to).WRITE()
	return inst
}

// GetToAccount gets the "to" account.
func (inst *HeliumTreasuryManagementRedeemV0) GetToAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(7)
}

// SetOwnerAccount sets the "owner" account.
func (inst *HeliumTreasuryManagementRedeemV0) SetOwnerAccount(owner ag_solanago.PublicKey) *HeliumTreasuryManagementRedeemV0 {
	inst.AccountMetaSlice[8] = ag_solanago.Meta(owner)
	return inst
}

// GetOwnerAccount gets the "owner" account.
func (inst *HeliumTreasuryManagementRedeemV0) GetOwnerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(8)
}

// SetCircuitBreakerProgramAccount sets the "circuitBreakerProgram" account.
func (inst *HeliumTreasuryManagementRedeemV0) SetCircuitBreakerProgramAccount(circuitBreakerProgram ag_solanago.PublicKey) *HeliumTreasuryManagementRedeemV0 {
	inst.AccountMetaSlice[9] = ag_solanago.Meta(circuitBreakerProgram)
	return inst
}

// GetCircuitBreakerProgramAccount gets the "circuitBreakerProgram" account.
func (inst *HeliumTreasuryManagementRedeemV0) GetCircuitBreakerProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(9)
}

// SetTokenProgramAccount sets the "tokenProgram" account.
func (inst *HeliumTreasuryManagementRedeemV0) SetTokenProgramAccount(tokenProgram ag_solanago.PublicKey) *HeliumTreasuryManagementRedeemV0 {
	inst.AccountMetaSlice[10] = ag_solanago.Meta(tokenProgram)
	return inst
}

// GetTokenProgramAccount gets the "tokenProgram" account.
func (inst *HeliumTreasuryManagementRedeemV0) GetTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(10)
}

func (inst HeliumTreasuryManagementRedeemV0) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_HeliumTreasuryManagementRedeemV0,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst HeliumTreasuryManagementRedeemV0) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *HeliumTreasuryManagementRedeemV0) Validate() error {
	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.SwapProgram is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.TreasuryManagement is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.TreasuryMint is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.SupplyMint is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.Treasury is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.CircuitBreaker is not set")
		}
		if inst.AccountMetaSlice[6] == nil {
			return errors.New("accounts.From is not set")
		}
		if inst.AccountMetaSlice[7] == nil {
			return errors.New("accounts.To is not set")
		}
		if inst.AccountMetaSlice[8] == nil {
			return errors.New("accounts.Owner is not set")
		}
		if inst.AccountMetaSlice[9] == nil {
			return errors.New("accounts.CircuitBreakerProgram is not set")
		}
		if inst.AccountMetaSlice[10] == nil {
			return errors.New("accounts.TokenProgram is not set")
		}
	}
	return nil
}

func (inst *HeliumTreasuryManagementRedeemV0) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("HeliumTreasuryManagementRedeemV0")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=0]").ParentFunc(func(paramsBranch ag_treeout.Branches) {})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=11]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("          swapProgram", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("   treasuryManagement", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("         treasuryMint", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("           supplyMint", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("             treasury", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta("       circuitBreaker", inst.AccountMetaSlice.Get(5)))
						accountsBranch.Child(ag_format.Meta("                 from", inst.AccountMetaSlice.Get(6)))
						accountsBranch.Child(ag_format.Meta("                   to", inst.AccountMetaSlice.Get(7)))
						accountsBranch.Child(ag_format.Meta("                owner", inst.AccountMetaSlice.Get(8)))
						accountsBranch.Child(ag_format.Meta("circuitBreakerProgram", inst.AccountMetaSlice.Get(9)))
						accountsBranch.Child(ag_format.Meta("         tokenProgram", inst.AccountMetaSlice.Get(10)))
					})
				})
		})
}

func (obj HeliumTreasuryManagementRedeemV0) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	return nil
}
func (obj *HeliumTreasuryManagementRedeemV0) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	return nil
}

// NewHeliumTreasuryManagementRedeemV0Instruction declares a new HeliumTreasuryManagementRedeemV0 instruction with the provided parameters and accounts.
func NewHeliumTreasuryManagementRedeemV0Instruction(
	// Accounts:
	swapProgram ag_solanago.PublicKey,
	treasuryManagement ag_solanago.PublicKey,
	treasuryMint ag_solanago.PublicKey,
	supplyMint ag_solanago.PublicKey,
	treasury ag_solanago.PublicKey,
	circuitBreaker ag_solanago.PublicKey,
	from ag_solanago.PublicKey,
	to ag_solanago.PublicKey,
	owner ag_solanago.PublicKey,
	circuitBreakerProgram ag_solanago.PublicKey,
	tokenProgram ag_solanago.PublicKey) *HeliumTreasuryManagementRedeemV0 {
	return NewHeliumTreasuryManagementRedeemV0InstructionBuilder().
		SetSwapProgramAccount(swapProgram).
		SetTreasuryManagementAccount(treasuryManagement).
		SetTreasuryMintAccount(treasuryMint).
		SetSupplyMintAccount(supplyMint).
		SetTreasuryAccount(treasury).
		SetCircuitBreakerAccount(circuitBreaker).
		SetFromAccount(from).
		SetToAccount(to).
		SetOwnerAccount(owner).
		SetCircuitBreakerProgramAccount(circuitBreakerProgram).
		SetTokenProgramAccount(tokenProgram)
}
