// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: eth.proto

package ethclient

import (
	"context"

	"github.com/simance-ai/smdx/rpcx/chains/eth/eth"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = eth.Request
	Response = eth.Response

	Eth interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultEth struct {
		cli zrpc.Client
	}
)

func NewEth(cli zrpc.Client) Eth {
	return &defaultEth{
		cli: cli,
	}
}

func (m *defaultEth) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := eth.NewEthClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
