// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: bsc.proto

package bscclient

import (
	"context"

	"github.com/simance-ai/smdx/rpcx/chains/bsc/bsc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = bsc.Request
	Response = bsc.Response

	Bsc interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultBsc struct {
		cli zrpc.Client
	}
)

func NewBsc(cli zrpc.Client) Bsc {
	return &defaultBsc{
		cli: cli,
	}
}

func (m *defaultBsc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := bsc.NewBscClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
