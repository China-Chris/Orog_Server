// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: rebate.proto

package rebateclient

import (
	"context"

	"github.com/simance-ai/smdx/rpcx/rebate/rebate"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	RebateRequest  = rebate.RebateRequest
	RebateResponse = rebate.RebateResponse

	Rebate interface {
		Ping(ctx context.Context, in *RebateRequest, opts ...grpc.CallOption) (*RebateResponse, error)
	}

	defaultRebate struct {
		cli zrpc.Client
	}
)

func NewRebate(cli zrpc.Client) Rebate {
	return &defaultRebate{
		cli: cli,
	}
}

func (m *defaultRebate) Ping(ctx context.Context, in *RebateRequest, opts ...grpc.CallOption) (*RebateResponse, error) {
	client := rebate.NewRebateClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
